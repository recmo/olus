use if is_zero add mul sub: use

is_even n then else:
    if (is_zero n) then (: is_odd (sub n 1) then else)

is_odd n then else:
    if (is_zero n) else (: is_even (sub n 1) then else)

fact n return:
    if (is_zero n) base recurse
    base: return 1
    recurse: return (mul n (fact (sub n 1)))

fib n return:
    if (is_zero n) (:return 0) (:sub n 1 (m:))
    if (is_zero m) (:return 1) (:sub m 1 (k:))
    return (add (fib m) (fib k))

is_even n then else:
    if (is_zero n) then (: is_odd (sub n 1) then else)

main exit:
    print 1 (:)
    print 11231 (:)
    print (add 1 1) (:)
    exit
